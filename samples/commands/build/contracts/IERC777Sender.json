{
  "contractName": "IERC777Sender",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "userData",
          "type": "bytes"
        },
        {
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"userData\",\"type\":\"bytes\"},{\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP.\\r  * `IERC777` Token holders can be notified of operations performed on their\\r tokens by having a contract implement this interface (contract holders can be\\r their own implementer) and registering it on the\\r [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\\r  * See `IERC1820Registry` and `ERC1820Implementer`.\\r\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an `IERC777` token contract whenever a registered holder's\\r (`from`) tokens are about to be moved or destroyed. The type of operation\\r is conveyed by `to` being the zero address or not.\\r      * This call occurs _before_ the token contract's state is updated, so\\r `IERC777.balanceOf`, etc., can be used to query the pre-operation state.\\r      * This function may revert to prevent the operation from being executed.\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0xf37bedb2825915acd49366e099a22f24ce4fd7a870d6e0121bd3eec4f17fb051\",\"urls\":[\"bzzr://1df873f3ac5db259c1fa8539b959713c08edb19a544e22f8d42a64d5c63dc460\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\r\n *\r\n * `IERC777` Token holders can be notified of operations performed on their\r\n * tokens by having a contract implement this interface (contract holders can be\r\n *  their own implementer) and registering it on the\r\n * [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n *\r\n * See `IERC1820Registry` and `ERC1820Implementer`.\r\n */\r\ninterface IERC777Sender {\r\n    /**\r\n     * @dev Called by an `IERC777` token contract whenever a registered holder's\r\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\r\n     * is conveyed by `to` being the zero address or not.\r\n     *\r\n     * This call occurs _before_ the token contract's state is updated, so\r\n     * `IERC777.balanceOf`, etc., can be used to query the pre-operation state.\r\n     *\r\n     * This function may revert to prevent the operation from being executed.\r\n     */\r\n    function tokensToSend(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint amount,\r\n        bytes calldata userData,\r\n        bytes calldata operatorData\r\n    ) external;\r\n}\r\n",
  "sourcePath": "C:\\git\\tokenbridge\\bridge\\contracts\\zeppelin\\token\\ERC777\\IERC777Sender.sol",
  "ast": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        7863
      ]
    },
    "id": 7864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7847,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:51"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\r\n\n * `IERC777` Token holders can be notified of operations performed on their\r\ntokens by having a contract implement this interface (contract holders can be\r\n their own implementer) and registering it on the\r\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n\n * See `IERC1820Registry` and `ERC1820Implementer`.\r",
        "fullyImplemented": false,
        "id": 7863,
        "linearizedBaseContracts": [
          7863
        ],
        "name": "IERC777Sender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\r\n(`from`) tokens are about to be moved or destroyed. The type of operation\r\nis conveyed by `to` being the zero address or not.\r\n\n     * This call occurs _before_ the token contract's state is updated, so\r\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\r\n\n     * This function may revert to prevent the operation from being executed.\r",
            "id": 7862,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7849,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1016:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7851,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1043:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7853,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1066:10:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7855,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1087:11:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7857,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1109:23:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7859,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1143:27:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:172:51"
            },
            "returnParameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:51"
            },
            "scope": 7863,
            "src": "984:203:51",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7864,
        "src": "460:730:51"
      }
    ],
    "src": "0:1192:51"
  },
  "legacyAST": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Sender.sol",
    "exportedSymbols": {
      "IERC777Sender": [
        7863
      ]
    },
    "id": 7864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7847,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:51"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensSender standard as defined in the EIP.\r\n\n * `IERC777` Token holders can be notified of operations performed on their\r\ntokens by having a contract implement this interface (contract holders can be\r\n their own implementer) and registering it on the\r\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n\n * See `IERC1820Registry` and `ERC1820Implementer`.\r",
        "fullyImplemented": false,
        "id": 7863,
        "linearizedBaseContracts": [
          7863
        ],
        "name": "IERC777Sender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever a registered holder's\r\n(`from`) tokens are about to be moved or destroyed. The type of operation\r\nis conveyed by `to` being the zero address or not.\r\n\n     * This call occurs _before_ the token contract's state is updated, so\r\n`IERC777.balanceOf`, etc., can be used to query the pre-operation state.\r\n\n     * This function may revert to prevent the operation from being executed.\r",
            "id": 7862,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7849,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1016:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7851,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1043:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7853,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1066:10:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7855,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1087:11:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7857,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1109:23:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7859,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "1143:27:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:172:51"
            },
            "returnParameters": {
              "id": 7861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:0:51"
            },
            "scope": 7863,
            "src": "984:203:51",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7864,
        "src": "460:730:51"
      }
    ],
    "src": "0:1192:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-10-04T14:00:10.477Z",
  "devdoc": {
    "details": "Interface of the ERC777TokensSender standard as defined in the EIP.\r  * `IERC777` Token holders can be notified of operations performed on their\r tokens by having a contract implement this interface (contract holders can be\r their own implementer) and registering it on the\r [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r  * See `IERC1820Registry` and `ERC1820Implementer`.\r",
    "methods": {
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an `IERC777` token contract whenever a registered holder's\r (`from`) tokens are about to be moved or destroyed. The type of operation\r is conveyed by `to` being the zero address or not.\r      * This call occurs _before_ the token contract's state is updated, so\r `IERC777.balanceOf`, etc., can be used to query the pre-operation state.\r      * This function may revert to prevent the operation from being executed.\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}