{
  "contractName": "IERC1820Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the\\r [EIP](https://eips.ethereum.org/EIPS/eip-1820). Accounts may register\\r implementers for interfaces in this registry, as well as query support.\\r  * Implementers may be shared by multiple accounts, and can also implement more\\r than a single interface for each account. Contracts can implement interfaces\\r for themselves, but externally-owned accounts (EOA) must delegate this to a\\r contract.\\r  * `IERC165` interfaces can also be queried via the registry.\\r  * For an in-depth explanation and source code analysis, see the EIP text.\\r\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such\\r implementer is registered, returns the zero address.\\r      * If `interfaceHash` is an `IERC165` interface id (i.e. it ends with 28\\r zeroes), `account` will be queried for support of it.\\r      * `account` being the zero address is an alias for the caller's address.\\r\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`.\\r      * See `setManager`.\\r\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\\r\",\"interfaceId\":\"ERC165 interface to check.\\r\"},\"return\":\"True if `account.address()` implements `interfaceId`, false otherwise.\\r\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\\r\",\"interfaceId\":\"ERC165 interface to check.\\r\"},\"return\":\"True if `account.address()` implements `interfaceId`, false otherwise.\\r\"},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the\\r corresponding\\r [section of the EIP](https://eips.ethereum.org/EIPS/eip-1820#interface-name).\\r\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as `account`'s implementer for\\r `interfaceHash`.\\r      * `account` being the zero address is an alias for the caller's address.\\r The zero address can also be used in `implementer` to remove an old one.\\r      * See `interfaceHash` to learn how these are created.\\r      * Emits an `InterfaceImplementerSet` event.\\r      * Requirements:\\r      * - the caller must be the current manager for `account`.\\r - `interfaceHash` must not be an `IERC165` interface id (i.e. it must not\\r end in 28 zeroes).\\r - `implementer` must implement `IERC1820Implementer` and return true when\\r queried for support, unless `implementer` is the caller. See\\r `IERC1820Implementer.canImplementInterfaceForAddress`.\\r\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an\\r account is able to set interface implementers for it.\\r      * By default, each account is its own manager. Passing a value of `0x0` in\\r `newManager` will reset the manager to this initial state.\\r      * Emits a `ManagerChanged` event.\\r      * Requirements:\\r      * - the caller must be the current manager for `account`.\\r\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\\r\",\"interfaceId\":\"ERC165 interface for which to update the cache.\\r\"}}}},\"userdoc\":{\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not.\\r If the result is not cached a direct lookup on the contract address is performed.\\r If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\\r 'updateERC165Cache' with the contract address.\\r\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\\r\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xa7260522361ef11b755355c79402cd654dd342bb63fde4dcf1a1c4210158ba1a\",\"urls\":[\"bzzr://7a091d358c3e50d55de8803c2aa4ad81930f902137d0828fac90ec71fffcc12c\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the global ERC1820 Registry, as defined in the\r\n * [EIP](https://eips.ethereum.org/EIPS/eip-1820). Accounts may register\r\n * implementers for interfaces in this registry, as well as query support.\r\n *\r\n * Implementers may be shared by multiple accounts, and can also implement more\r\n * than a single interface for each account. Contracts can implement interfaces\r\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\r\n * contract.\r\n *\r\n * `IERC165` interfaces can also be queried via the registry.\r\n *\r\n * For an in-depth explanation and source code analysis, see the EIP text.\r\n */\r\ninterface IERC1820Registry {\r\n    /**\r\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\r\n     * account is able to set interface implementers for it.\r\n     *\r\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n     * `newManager` will reset the manager to this initial state.\r\n     *\r\n     * Emits a `ManagerChanged` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     */\r\n    function setManager(address account, address newManager) external;\r\n\r\n    /**\r\n     * @dev Returns the manager for `account`.\r\n     *\r\n     * See `setManager`.\r\n     */\r\n    function getManager(address account) external view returns (address);\r\n\r\n    /**\r\n     * @dev Sets the `implementer` contract as `account`'s implementer for\r\n     * `interfaceHash`.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     * The zero address can also be used in `implementer` to remove an old one.\r\n     *\r\n     * See `interfaceHash` to learn how these are created.\r\n     *\r\n     * Emits an `InterfaceImplementerSet` event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     * - `interfaceHash` must not be an `IERC165` interface id (i.e. it must not\r\n     * end in 28 zeroes).\r\n     * - `implementer` must implement `IERC1820Implementer` and return true when\r\n     * queried for support, unless `implementer` is the caller. See\r\n     * `IERC1820Implementer.canImplementInterfaceForAddress`.\r\n     */\r\n    function setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer) external;\r\n\r\n    /**\r\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\r\n     * implementer is registered, returns the zero address.\r\n     *\r\n     * If `interfaceHash` is an `IERC165` interface id (i.e. it ends with 28\r\n     * zeroes), `account` will be queried for support of it.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     */\r\n    function getInterfaceImplementer(address account, bytes32 interfaceHash) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\r\n     * corresponding\r\n     * [section of the EIP](https://eips.ethereum.org/EIPS/eip-1820#interface-name).\r\n     */\r\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\r\n\r\n    /**\r\n     *  @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n     *  @param account Address of the contract for which to update the cache.\r\n     *  @param interfaceId ERC165 interface for which to update the cache.\r\n     */\r\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\r\n\r\n    /**\r\n     *  @notice Checks whether a contract implements an ERC165 interface or not.\r\n     *  If the result is not cached a direct lookup on the contract address is performed.\r\n     *  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n     *  'updateERC165Cache' with the contract address.\r\n     *  @param account Address of the contract to check.\r\n     *  @param interfaceId ERC165 interface to check.\r\n     *  @return True if `account.address()` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    /**\r\n     *  @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n     *  @param account Address of the contract to check.\r\n     *  @param interfaceId ERC165 interface to check.\r\n     *  @return True if `account.address()` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\r\n\r\n    event ManagerChanged(address indexed account, address indexed newManager);\r\n}\r\n",
  "sourcePath": "C:\\git\\tokenbridge\\bridge\\contracts\\zeppelin\\introspection\\IERC1820Registry.sol",
  "ast": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        5174
      ]
    },
    "id": 5175,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5095,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the global ERC1820 Registry, as defined in the\r\n[EIP](https://eips.ethereum.org/EIPS/eip-1820). Accounts may register\r\nimplementers for interfaces in this registry, as well as query support.\r\n\n * Implementers may be shared by multiple accounts, and can also implement more\r\nthan a single interface for each account. Contracts can implement interfaces\r\nfor themselves, but externally-owned accounts (EOA) must delegate this to a\r\ncontract.\r\n\n * `IERC165` interfaces can also be queried via the registry.\r\n\n * For an in-depth explanation and source code analysis, see the EIP text.\r",
        "fullyImplemented": false,
        "id": 5174,
        "linearizedBaseContracts": [
          5174
        ],
        "name": "IERC1820Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Sets `newManager` as the manager for `account`. A manager of an\r\naccount is able to set interface implementers for it.\r\n\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n`newManager` will reset the manager to this initial state.\r\n\n     * Emits a `ManagerChanged` event.\r\n\n     * Requirements:\r\n\n     * - the caller must be the current manager for `account`.\r",
            "id": 5102,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5097,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5102,
                  "src": "1180:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5099,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5102,
                  "src": "1197:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:37:33"
            },
            "returnParameters": {
              "id": 5101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:33"
            },
            "scope": 5174,
            "src": "1160:66:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the manager for `account`.\r\n\n     * See `setManager`.\r",
            "id": 5109,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5104,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "1354:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:17:33"
            },
            "returnParameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "1394:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:9:33"
            },
            "scope": 5174,
            "src": "1334:69:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets the `implementer` contract as `account`'s implementer for\r\n`interfaceHash`.\r\n\n     * `account` being the zero address is an alias for the caller's address.\r\nThe zero address can also be used in `implementer` to remove an old one.\r\n\n     * See `interfaceHash` to learn how these are created.\r\n\n     * Emits an `InterfaceImplementerSet` event.\r\n\n     * Requirements:\r\n\n     * - the caller must be the current manager for `account`.\r\n- `interfaceHash` must not be an `IERC165` interface id (i.e. it must not\r\nend in 28 zeroes).\r\n- `implementer` must implement `IERC1820Implementer` and return true when\r\nqueried for support, unless `implementer` is the caller. See\r\n`IERC1820Implementer.canImplementInterfaceForAddress`.\r",
            "id": 5118,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2282:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5113,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2299:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2322:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2281:61:33"
            },
            "returnParameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2351:0:33"
            },
            "scope": 5174,
            "src": "2249:103:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the implementer of `interfaceHash` for `account`. If no such\r\nimplementer is registered, returns the zero address.\r\n\n     * If `interfaceHash` is an `IERC165` interface id (i.e. it ends with 28\r\nzeroes), `account` will be queried for support of it.\r\n\n     * `account` being the zero address is an alias for the caller's address.\r",
            "id": 5127,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5120,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2789:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5122,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2806:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5121,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2788:40:33"
            },
            "returnParameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5125,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2852:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2851:9:33"
            },
            "scope": 5174,
            "src": "2756:105:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the interface hash for an `interfaceName`, as defined in the\r\ncorresponding\r\n[section of the EIP](https://eips.ethereum.org/EIPS/eip-1820#interface-name).\r",
            "id": 5134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5129,
                  "name": "interfaceName",
                  "nodeType": "VariableDeclaration",
                  "scope": 5134,
                  "src": "3100:29:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3099:31:33"
            },
            "returnParameters": {
              "id": 5133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5132,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5134,
                  "src": "3154:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3154:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3153:9:33"
            },
            "scope": 5174,
            "src": "3077:86:33",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n @param account Address of the contract for which to update the cache.\r\n @param interfaceId ERC165 interface for which to update the cache.\r",
            "id": 5141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5136,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "3471:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3471:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5138,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "3488:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3470:37:33"
            },
            "returnParameters": {
              "id": 5140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3516:0:33"
            },
            "scope": 5174,
            "src": "3444:73:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not.\r\n If the result is not cached a direct lookup on the contract address is performed.\r\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n 'updateERC165Cache' with the contract address.\r\n @param account Address of the contract to check.\r\n @param interfaceId ERC165 interface to check.\r\n @return True if `account.address()` implements `interfaceId`, false otherwise.\r",
            "id": 5150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5143,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4127:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4127:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5145,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4144:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5144,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4126:37:33"
            },
            "returnParameters": {
              "id": 5149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5148,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4187:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4187:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4186:6:33"
            },
            "scope": 5174,
            "src": "4092:101:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n @param account Address of the contract to check.\r\n @param interfaceId ERC165 interface to check.\r\n @return True if `account.address()` implements `interfaceId`, false otherwise.\r",
            "id": 5159,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5152,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4581:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5154,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4598:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5153,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4580:37:33"
            },
            "returnParameters": {
              "id": 5158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5157,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4641:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4640:6:33"
            },
            "scope": 5174,
            "src": "4539:108:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5167,
            "name": "InterfaceImplementerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5161,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4685:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "indexed": true,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4710:29:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5165,
                  "indexed": true,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4741:27:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4684:85:33"
            },
            "src": "4655:115:33"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5173,
            "name": "ManagerChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5169,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5173,
                  "src": "4799:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4799:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5171,
                  "indexed": true,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5173,
                  "src": "4824:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4798:53:33"
            },
            "src": "4778:74:33"
          }
        ],
        "scope": 5175,
        "src": "663:4192:33"
      }
    ],
    "src": "0:4857:33"
  },
  "legacyAST": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        5174
      ]
    },
    "id": 5175,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5095,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:33"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the global ERC1820 Registry, as defined in the\r\n[EIP](https://eips.ethereum.org/EIPS/eip-1820). Accounts may register\r\nimplementers for interfaces in this registry, as well as query support.\r\n\n * Implementers may be shared by multiple accounts, and can also implement more\r\nthan a single interface for each account. Contracts can implement interfaces\r\nfor themselves, but externally-owned accounts (EOA) must delegate this to a\r\ncontract.\r\n\n * `IERC165` interfaces can also be queried via the registry.\r\n\n * For an in-depth explanation and source code analysis, see the EIP text.\r",
        "fullyImplemented": false,
        "id": 5174,
        "linearizedBaseContracts": [
          5174
        ],
        "name": "IERC1820Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Sets `newManager` as the manager for `account`. A manager of an\r\naccount is able to set interface implementers for it.\r\n\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n`newManager` will reset the manager to this initial state.\r\n\n     * Emits a `ManagerChanged` event.\r\n\n     * Requirements:\r\n\n     * - the caller must be the current manager for `account`.\r",
            "id": 5102,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5097,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5102,
                  "src": "1180:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5099,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5102,
                  "src": "1197:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1197:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1179:37:33"
            },
            "returnParameters": {
              "id": 5101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1225:0:33"
            },
            "scope": 5174,
            "src": "1160:66:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the manager for `account`.\r\n\n     * See `setManager`.\r",
            "id": 5109,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5104,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "1354:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1353:17:33"
            },
            "returnParameters": {
              "id": 5108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5109,
                  "src": "1394:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1393:9:33"
            },
            "scope": 5174,
            "src": "1334:69:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Sets the `implementer` contract as `account`'s implementer for\r\n`interfaceHash`.\r\n\n     * `account` being the zero address is an alias for the caller's address.\r\nThe zero address can also be used in `implementer` to remove an old one.\r\n\n     * See `interfaceHash` to learn how these are created.\r\n\n     * Emits an `InterfaceImplementerSet` event.\r\n\n     * Requirements:\r\n\n     * - the caller must be the current manager for `account`.\r\n- `interfaceHash` must not be an `IERC165` interface id (i.e. it must not\r\nend in 28 zeroes).\r\n- `implementer` must implement `IERC1820Implementer` and return true when\r\nqueried for support, unless `implementer` is the caller. See\r\n`IERC1820Implementer.canImplementInterfaceForAddress`.\r",
            "id": 5118,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5111,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2282:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5113,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2299:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5112,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5115,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 5118,
                  "src": "2322:19:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2281:61:33"
            },
            "returnParameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2351:0:33"
            },
            "scope": 5174,
            "src": "2249:103:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the implementer of `interfaceHash` for `account`. If no such\r\nimplementer is registered, returns the zero address.\r\n\n     * If `interfaceHash` is an `IERC165` interface id (i.e. it ends with 28\r\nzeroes), `account` will be queried for support of it.\r\n\n     * `account` being the zero address is an alias for the caller's address.\r",
            "id": 5127,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5120,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2789:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5122,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2806:21:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5121,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2788:40:33"
            },
            "returnParameters": {
              "id": 5126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5125,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5127,
                  "src": "2852:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2852:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2851:9:33"
            },
            "scope": 5174,
            "src": "2756:105:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev Returns the interface hash for an `interfaceName`, as defined in the\r\ncorresponding\r\n[section of the EIP](https://eips.ethereum.org/EIPS/eip-1820#interface-name).\r",
            "id": 5134,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5129,
                  "name": "interfaceName",
                  "nodeType": "VariableDeclaration",
                  "scope": 5134,
                  "src": "3100:29:33",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3100:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3099:31:33"
            },
            "returnParameters": {
              "id": 5133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5132,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5134,
                  "src": "3154:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3154:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3153:9:33"
            },
            "scope": 5174,
            "src": "3077:86:33",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n @param account Address of the contract for which to update the cache.\r\n @param interfaceId ERC165 interface for which to update the cache.\r",
            "id": 5141,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5136,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "3471:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3471:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5138,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5141,
                  "src": "3488:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5137,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3470:37:33"
            },
            "returnParameters": {
              "id": 5140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3516:0:33"
            },
            "scope": 5174,
            "src": "3444:73:33",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not.\r\n If the result is not cached a direct lookup on the contract address is performed.\r\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n 'updateERC165Cache' with the contract address.\r\n @param account Address of the contract to check.\r\n @param interfaceId ERC165 interface to check.\r\n @return True if `account.address()` implements `interfaceId`, false otherwise.\r",
            "id": 5150,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5143,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4127:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4127:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5145,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4144:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5144,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4126:37:33"
            },
            "returnParameters": {
              "id": 5149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5148,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5150,
                  "src": "4187:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5147,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4187:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4186:6:33"
            },
            "scope": 5174,
            "src": "4092:101:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n @param account Address of the contract to check.\r\n @param interfaceId ERC165 interface to check.\r\n @return True if `account.address()` implements `interfaceId`, false otherwise.\r",
            "id": 5159,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5152,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4581:15:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4581:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5154,
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4598:18:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5153,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4598:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4580:37:33"
            },
            "returnParameters": {
              "id": 5158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5157,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5159,
                  "src": "4641:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4641:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4640:6:33"
            },
            "scope": 5174,
            "src": "4539:108:33",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5167,
            "name": "InterfaceImplementerSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5161,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4685:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5163,
                  "indexed": true,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4710:29:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4710:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5165,
                  "indexed": true,
                  "name": "implementer",
                  "nodeType": "VariableDeclaration",
                  "scope": 5167,
                  "src": "4741:27:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4684:85:33"
            },
            "src": "4655:115:33"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 5173,
            "name": "ManagerChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5169,
                  "indexed": true,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5173,
                  "src": "4799:23:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4799:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5171,
                  "indexed": true,
                  "name": "newManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 5173,
                  "src": "4824:26:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4798:53:33"
            },
            "src": "4778:74:33"
          }
        ],
        "scope": 5175,
        "src": "663:4192:33"
      }
    ],
    "src": "0:4857:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-10-04T14:00:10.439Z",
  "devdoc": {
    "details": "Interface of the global ERC1820 Registry, as defined in the\r [EIP](https://eips.ethereum.org/EIPS/eip-1820). Accounts may register\r implementers for interfaces in this registry, as well as query support.\r  * Implementers may be shared by multiple accounts, and can also implement more\r than a single interface for each account. Contracts can implement interfaces\r for themselves, but externally-owned accounts (EOA) must delegate this to a\r contract.\r  * `IERC165` interfaces can also be queried via the registry.\r  * For an in-depth explanation and source code analysis, see the EIP text.\r",
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "details": "Returns the implementer of `interfaceHash` for `account`. If no such\r implementer is registered, returns the zero address.\r      * If `interfaceHash` is an `IERC165` interface id (i.e. it ends with 28\r zeroes), `account` will be queried for support of it.\r      * `account` being the zero address is an alias for the caller's address.\r"
      },
      "getManager(address)": {
        "details": "Returns the manager for `account`.\r      * See `setManager`.\r"
      },
      "implementsERC165Interface(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.\r",
          "interfaceId": "ERC165 interface to check.\r"
        },
        "return": "True if `account.address()` implements `interfaceId`, false otherwise.\r"
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.\r",
          "interfaceId": "ERC165 interface to check.\r"
        },
        "return": "True if `account.address()` implements `interfaceId`, false otherwise.\r"
      },
      "interfaceHash(string)": {
        "details": "Returns the interface hash for an `interfaceName`, as defined in the\r corresponding\r [section of the EIP](https://eips.ethereum.org/EIPS/eip-1820#interface-name).\r"
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "details": "Sets the `implementer` contract as `account`'s implementer for\r `interfaceHash`.\r      * `account` being the zero address is an alias for the caller's address.\r The zero address can also be used in `implementer` to remove an old one.\r      * See `interfaceHash` to learn how these are created.\r      * Emits an `InterfaceImplementerSet` event.\r      * Requirements:\r      * - the caller must be the current manager for `account`.\r - `interfaceHash` must not be an `IERC165` interface id (i.e. it must not\r end in 28 zeroes).\r - `implementer` must implement `IERC1820Implementer` and return true when\r queried for support, unless `implementer` is the caller. See\r `IERC1820Implementer.canImplementInterfaceForAddress`.\r"
      },
      "setManager(address,address)": {
        "details": "Sets `newManager` as the manager for `account`. A manager of an\r account is able to set interface implementers for it.\r      * By default, each account is its own manager. Passing a value of `0x0` in\r `newManager` will reset the manager to this initial state.\r      * Emits a `ManagerChanged` event.\r      * Requirements:\r      * - the caller must be the current manager for `account`.\r"
      },
      "updateERC165Cache(address,bytes4)": {
        "params": {
          "account": "Address of the contract for which to update the cache.\r",
          "interfaceId": "ERC165 interface for which to update the cache.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "implementsERC165Interface(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not.\r If the result is not cached a direct lookup on the contract address is performed.\r If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r 'updateERC165Cache' with the contract address.\r"
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r"
      },
      "updateERC165Cache(address,bytes4)": {
        "notice": "Updates the cache with whether the contract implements an ERC165 interface or not.\r"
      }
    }
  }
}