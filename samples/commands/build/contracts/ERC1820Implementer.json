{
  "contractName": "ERC1820Implementer",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC1820Implementer` interface.\\r  * Contracts may inherit from this and call `_registerInterfaceForAddress` to\\r declare their willingness to be implementers.\\r `IERC1820Registry.setInterfaceImplementer` should then be called for the\\r registration to be complete.\\r\",\"methods\":{}},\"userdoc\":{\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"See `IERC1820Implementer.canImplementInterfaceForAddress`.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/ERC1820Implementer.sol\":\"ERC1820Implementer\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0xe5bd69c7b77c5896fe6507f39c295ab090c6bdf6650f19d76167c692cf4642e4\",\"urls\":[\"bzzr://d6455b4efcb44091754a5d9e2efbd16f8716c37a97f2a0b782865b261fb1e00d\"]},\"/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0x906cf82153bfd6dac5fc4d2cbe89e9f7a1d809230ca8ef9b894d898d8cab2b4c\",\"urls\":[\"bzzr://57acda50819bad73bdbe17314a59858b92a38cb2f08bf19c945e64a3eaecbb4b\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610198806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063249cb3fa1461004d575b600080fd5b6100996004803603604081101561006357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100af565b6040518082815260200191505060405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661011c576000600102610164565b60405160200180807f455243313832305f4143434550545f4d414749430000000000000000000000008152506014019050604051602081830303815290604052805190602001205b90509291505056fea165627a7a7230582050de178dbb1fd716eb0281d0bde6abd013a7d816ddae4f140ad7f956563d2a990029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c010000000000000000000000000000000000000000000000000000000090048063249cb3fa1461004d575b600080fd5b6100996004803603604081101561006357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100af565b6040518082815260200191505060405180910390f35b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661011c576000600102610164565b60405160200180807f455243313832305f4143434550545f4d414749430000000000000000000000008152506014019050604051602081830303815290604052805190602001205b90509291505056fea165627a7a7230582050de178dbb1fd716eb0281d0bde6abd013a7d816ddae4f140ad7f956563d2a990029",
  "sourceMap": "383:959:30:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:959:30;;;;;;;",
  "deployedSourceMap": "383:959:30:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;383:959:30;;;;;;;;;;;;;;;;;;;;716:222;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;716:222:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;820:7;847:20;:35;868:13;847:35;;;;;;;;;;;:44;883:7;847:44;;;;;;;;;;;;;;;;;;;;;;;;;:83;;925:4;917:13;;847:83;;;499:40;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;499:40:30;;;489:51;;;;;;847:83;840:90;;716:222;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./IERC1820Implementer.sol\";\r\n\r\n/**\r\n * @dev Implementation of the `IERC1820Implementer` interface.\r\n *\r\n * Contracts may inherit from this and call `_registerInterfaceForAddress` to\r\n * declare their willingness to be implementers.\r\n * `IERC1820Registry.setInterfaceImplementer` should then be called for the\r\n * registration to be complete.\r\n */\r\ncontract ERC1820Implementer is IERC1820Implementer {\r\n    bytes32 constant private ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\r\n\r\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\r\n\r\n    /**\r\n     * See `IERC1820Implementer.canImplementInterfaceForAddress`.\r\n     */\r\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account) external view returns (bytes32) {\r\n        return _supportedInterfaces[interfaceHash][account] ? ERC1820_ACCEPT_MAGIC : bytes32(0x00);\r\n    }\r\n\r\n    /**\r\n     * @dev Declares the contract as willing to be an implementer of\r\n     * `interfaceHash` for `account`.\r\n     *\r\n     * See `IERC1820Registry.setInterfaceImplementer` and\r\n     * `IERC1820Registry.interfaceHash`.\r\n     */\r\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal {\r\n        _supportedInterfaces[interfaceHash][account] = true;\r\n    }\r\n}\r\n",
  "sourcePath": "C:/git/tokenbridge/bridge/contracts/zeppelin/introspection/ERC1820Implementer.sol",
  "ast": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        5071
      ]
    },
    "id": 5072,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5016,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 5017,
        "nodeType": "ImportDirective",
        "scope": 5072,
        "sourceUnit": 5094,
        "src": "27:35:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5018,
              "name": "IERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5093,
              "src": "414:19:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Implementer_$5093",
                "typeString": "contract IERC1820Implementer"
              }
            },
            "id": 5019,
            "nodeType": "InheritanceSpecifier",
            "src": "414:19:30"
          }
        ],
        "contractDependencies": [
          5093
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of the `IERC1820Implementer` interface.\r\n\n * Contracts may inherit from this and call `_registerInterfaceForAddress` to\r\ndeclare their willingness to be implementers.\r\n`IERC1820Registry.setInterfaceImplementer` should then be called for the\r\nregistration to be complete.\r",
        "fullyImplemented": true,
        "id": 5071,
        "linearizedBaseContracts": [
          5071,
          5093
        ],
        "name": "ERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5027,
            "name": "ERC1820_ACCEPT_MAGIC",
            "nodeType": "VariableDeclaration",
            "scope": 5071,
            "src": "441:99:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5020,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "455243313832305f4143434550545f4d41474943",
                      "id": 5024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "516:22:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      },
                      "value": "ERC1820_ACCEPT_MAGIC"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 5022,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "499:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "499:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 5025,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "499:40:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 5021,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 8006,
                "src": "489:9:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5026,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "489:51:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5033,
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 5071,
            "src": "549:73:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 5032,
              "keyType": {
                "id": 5028,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "557:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "549:44:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 5031,
                "keyType": {
                  "id": 5029,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "576:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "568:24:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 5030,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5053,
              "nodeType": "Block",
              "src": "829:109:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5042,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5033,
                          "src": "847:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 5044,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5043,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5035,
                          "src": "868:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "847:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5045,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5037,
                        "src": "883:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "847:44:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30783030",
                          "id": 5049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "925:4:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 5048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "917:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": "bytes32"
                      },
                      "id": 5050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "917:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 5051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "847:83:30",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 5047,
                      "name": "ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5027,
                      "src": "894:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5041,
                  "id": 5052,
                  "nodeType": "Return",
                  "src": "840:90:30"
                }
              ]
            },
            "documentation": "See `IERC1820Implementer.canImplementInterfaceForAddress`.\r",
            "id": 5054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5035,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "757:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5037,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "780:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "756:40:30"
            },
            "returnParameters": {
              "id": 5041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5040,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "820:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5039,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:9:30"
            },
            "scope": 5071,
            "src": "716:222:30",
            "stateMutability": "view",
            "superFunction": 5092,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5069,
              "nodeType": "Block",
              "src": "1269:70:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5061,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5033,
                          "src": "1280:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 5064,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5062,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5056,
                          "src": "1301:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1280:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5063,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5058,
                        "src": "1316:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1280:44:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1327:4:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1280:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5068,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:51:30"
                }
              ]
            },
            "documentation": "@dev Declares the contract as willing to be an implementer of\r\n`interfaceHash` for `account`.\r\n\n     * See `IERC1820Registry.setInterfaceImplementer` and\r\n`IERC1820Registry.interfaceHash`.\r",
            "id": 5070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5056,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5070,
                  "src": "1220:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5055,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5058,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5070,
                  "src": "1243:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1219:40:30"
            },
            "returnParameters": {
              "id": 5060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:30"
            },
            "scope": 5071,
            "src": "1182:157:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5072,
        "src": "383:959:30"
      }
    ],
    "src": "0:1344:30"
  },
  "legacyAST": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        5071
      ]
    },
    "id": 5072,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5016,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 5017,
        "nodeType": "ImportDirective",
        "scope": 5072,
        "sourceUnit": 5094,
        "src": "27:35:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5018,
              "name": "IERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5093,
              "src": "414:19:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Implementer_$5093",
                "typeString": "contract IERC1820Implementer"
              }
            },
            "id": 5019,
            "nodeType": "InheritanceSpecifier",
            "src": "414:19:30"
          }
        ],
        "contractDependencies": [
          5093
        ],
        "contractKind": "contract",
        "documentation": "@dev Implementation of the `IERC1820Implementer` interface.\r\n\n * Contracts may inherit from this and call `_registerInterfaceForAddress` to\r\ndeclare their willingness to be implementers.\r\n`IERC1820Registry.setInterfaceImplementer` should then be called for the\r\nregistration to be complete.\r",
        "fullyImplemented": true,
        "id": 5071,
        "linearizedBaseContracts": [
          5071,
          5093
        ],
        "name": "ERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 5027,
            "name": "ERC1820_ACCEPT_MAGIC",
            "nodeType": "VariableDeclaration",
            "scope": 5071,
            "src": "441:99:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5020,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "455243313832305f4143434550545f4d41474943",
                      "id": 5024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "516:22:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      },
                      "value": "ERC1820_ACCEPT_MAGIC"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 5022,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "499:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 5023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "499:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 5025,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "499:40:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 5021,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 8006,
                "src": "489:9:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5026,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "489:51:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5033,
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 5071,
            "src": "549:73:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 5032,
              "keyType": {
                "id": 5028,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "557:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "549:44:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 5031,
                "keyType": {
                  "id": 5029,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "576:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "568:24:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 5030,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 5053,
              "nodeType": "Block",
              "src": "829:109:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5042,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5033,
                          "src": "847:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 5044,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5043,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5035,
                          "src": "868:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "847:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5045,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5037,
                        "src": "883:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "847:44:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30783030",
                          "id": 5049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "925:4:30",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 5048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "917:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": "bytes32"
                      },
                      "id": 5050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "917:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 5051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "847:83:30",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 5047,
                      "name": "ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5027,
                      "src": "894:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 5041,
                  "id": 5052,
                  "nodeType": "Return",
                  "src": "840:90:30"
                }
              ]
            },
            "documentation": "See `IERC1820Implementer.canImplementInterfaceForAddress`.\r",
            "id": 5054,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5035,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "757:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5037,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "780:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "756:40:30"
            },
            "returnParameters": {
              "id": 5041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5040,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5054,
                  "src": "820:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5039,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:9:30"
            },
            "scope": 5071,
            "src": "716:222:30",
            "stateMutability": "view",
            "superFunction": 5092,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5069,
              "nodeType": "Block",
              "src": "1269:70:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5061,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5033,
                          "src": "1280:20:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 5064,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5062,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5056,
                          "src": "1301:13:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1280:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5065,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5063,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5058,
                        "src": "1316:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1280:44:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 5066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1327:4:30",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1280:51:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5068,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:51:30"
                }
              ]
            },
            "documentation": "@dev Declares the contract as willing to be an implementer of\r\n`interfaceHash` for `account`.\r\n\n     * See `IERC1820Registry.setInterfaceImplementer` and\r\n`IERC1820Registry.interfaceHash`.\r",
            "id": 5070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5056,
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 5070,
                  "src": "1220:21:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5055,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5058,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 5070,
                  "src": "1243:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1219:40:30"
            },
            "returnParameters": {
              "id": 5060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:30"
            },
            "scope": 5071,
            "src": "1182:157:30",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5072,
        "src": "383:959:30"
      }
    ],
    "src": "0:1344:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-10-04T14:00:10.436Z",
  "devdoc": {
    "details": "Implementation of the `IERC1820Implementer` interface.\r  * Contracts may inherit from this and call `_registerInterfaceForAddress` to\r declare their willingness to be implementers.\r `IERC1820Registry.setInterfaceImplementer` should then be called for the\r registration to be complete.\r",
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "See `IERC1820Implementer.canImplementInterfaceForAddress`.\r"
      }
    }
  }
}