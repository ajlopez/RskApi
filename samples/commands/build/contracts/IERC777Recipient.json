{
  "contractName": "IERC777Recipient",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "userData",
          "type": "bytes"
        },
        {
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"userData\",\"type\":\"bytes\"},{\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP.\\r  * Accounts can be notified of `IERC777` tokens being sent to them by having a\\r contract implement this interface (contract holders can be their own\\r implementer) and registering it on the\\r [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\\r  * See `IERC1820Registry` and `ERC1820Implementer`.\\r\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an `IERC777` token contract whenever tokens are being\\r moved or created into a registered account (`to`). The type of operation\\r is conveyed by `from` being the zero address or not.\\r      * This call occurs _after_ the token contract's state is updated, so\\r `IERC777.balanceOf`, etc., can be used to query the post-operation state.\\r      * This function may revert to prevent the operation from being executed.\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x0d4065c4653c62c6cdd33a22af985cccb7b7e435aaaae66346d2d5e8012b7f2d\",\"urls\":[\"bzzr://aa477aedb8ea06cbdf06ed67241ae7392f082bcd8c912eb65be86d73eda016d0\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\r\n *\r\n * Accounts can be notified of `IERC777` tokens being sent to them by having a\r\n * contract implement this interface (contract holders can be their own\r\n * implementer) and registering it on the\r\n * [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n *\r\n * See `IERC1820Registry` and `ERC1820Implementer`.\r\n */\r\ninterface IERC777Recipient {\r\n    /**\r\n     * @dev Called by an `IERC777` token contract whenever tokens are being\r\n     * moved or created into a registered account (`to`). The type of operation\r\n     * is conveyed by `from` being the zero address or not.\r\n     *\r\n     * This call occurs _after_ the token contract's state is updated, so\r\n     * `IERC777.balanceOf`, etc., can be used to query the post-operation state.\r\n     *\r\n     * This function may revert to prevent the operation from being executed.\r\n     */\r\n    function tokensReceived(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint amount,\r\n        bytes calldata userData,\r\n        bytes calldata operatorData\r\n    ) external;\r\n}\r\n",
  "sourcePath": "C:\\git\\tokenbridge\\bridge\\contracts\\zeppelin\\token\\ERC777\\IERC777Recipient.sol",
  "ast": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Recipient.sol",
    "exportedSymbols": {
      "IERC777Recipient": [
        7845
      ]
    },
    "id": 7846,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7829,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:50"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\r\n\n * Accounts can be notified of `IERC777` tokens being sent to them by having a\r\ncontract implement this interface (contract holders can be their own\r\nimplementer) and registering it on the\r\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n\n * See `IERC1820Registry` and `ERC1820Implementer`.\r",
        "fullyImplemented": false,
        "id": 7845,
        "linearizedBaseContracts": [
          7845
        ],
        "name": "IERC777Recipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever tokens are being\r\nmoved or created into a registered account (`to`). The type of operation\r\nis conveyed by `from` being the zero address or not.\r\n\n     * This call occurs _after_ the token contract's state is updated, so\r\n`IERC777.balanceOf`, etc., can be used to query the post-operation state.\r\n\n     * This function may revert to prevent the operation from being executed.\r",
            "id": 7844,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7831,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1003:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7833,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1030:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7835,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1053:10:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7837,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1074:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7836,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7839,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1096:23:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7838,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7841,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1130:27:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7840,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:172:50"
            },
            "returnParameters": {
              "id": 7843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:0:50"
            },
            "scope": 7845,
            "src": "969:205:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7846,
        "src": "446:731:50"
      }
    ],
    "src": "0:1179:50"
  },
  "legacyAST": {
    "absolutePath": "/C/git/tokenbridge/bridge/contracts/zeppelin/token/ERC777/IERC777Recipient.sol",
    "exportedSymbols": {
      "IERC777Recipient": [
        7845
      ]
    },
    "id": 7846,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7829,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:50"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\r\n\n * Accounts can be notified of `IERC777` tokens being sent to them by having a\r\ncontract implement this interface (contract holders can be their own\r\nimplementer) and registering it on the\r\n[ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r\n\n * See `IERC1820Registry` and `ERC1820Implementer`.\r",
        "fullyImplemented": false,
        "id": 7845,
        "linearizedBaseContracts": [
          7845
        ],
        "name": "IERC777Recipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Called by an `IERC777` token contract whenever tokens are being\r\nmoved or created into a registered account (`to`). The type of operation\r\nis conveyed by `from` being the zero address or not.\r\n\n     * This call occurs _after_ the token contract's state is updated, so\r\n`IERC777.balanceOf`, etc., can be used to query the post-operation state.\r\n\n     * This function may revert to prevent the operation from being executed.\r",
            "id": 7844,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7831,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1003:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7833,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1030:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7835,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1053:10:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7837,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1074:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7836,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7839,
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1096:23:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7838,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7841,
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "scope": 7844,
                  "src": "1130:27:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7840,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "992:172:50"
            },
            "returnParameters": {
              "id": 7843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1173:0:50"
            },
            "scope": 7845,
            "src": "969:205:50",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7846,
        "src": "446:731:50"
      }
    ],
    "src": "0:1179:50"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.8",
  "updatedAt": "2019-10-04T14:00:10.476Z",
  "devdoc": {
    "details": "Interface of the ERC777TokensRecipient standard as defined in the EIP.\r  * Accounts can be notified of `IERC777` tokens being sent to them by having a\r contract implement this interface (contract holders can be their own\r implementer) and registering it on the\r [ERC1820 global registry](https://eips.ethereum.org/EIPS/eip-1820).\r  * See `IERC1820Registry` and `ERC1820Implementer`.\r",
    "methods": {
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an `IERC777` token contract whenever tokens are being\r moved or created into a registered account (`to`). The type of operation\r is conveyed by `from` being the zero address or not.\r      * This call occurs _after_ the token contract's state is updated, so\r `IERC777.balanceOf`, etc., can be used to query the post-operation state.\r      * This function may revert to prevent the operation from being executed.\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}